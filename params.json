{"name":"Googcore - CoreDumper using Google API","tagline":"Custom CoreDumps using GoogleCoreDumper | Adding user specific notes in the core","body":"### GoogCore\r\n\r\nGoogleCoreDumper can be used to both read & write coredumps. It also provides facility to add custom notes in the corefile through     SetCoreDumpNotes() api . Surprisingly, these functions aren't explained in the project wiki page. Nevertheless the man pages as part of package was still useful.\r\n\r\n    SetCoreDumpNotes() \r\n\r\nsets the attributes in params to add additional notes to core dumps when called with      \r\n    GetCoreDumpWith() or  WriteCoreDumpWith()\r\n\r\nThe notes are specified as an array of the Core‚ÄêdumperNote structure:\r\n\r\n\r\n    struct CoredumperNote {\r\n    const char *name; // The vendor name\r\n    unsigned int type; // A vendor specific type\r\n    unsigned int description_size; // The size of the description field\r\n    const void *description; // The note data\r\n    };\r\n\r\n\r\nThe name, including a terminating null character, will be 4 byte aligned. The type is a user chosen value. The description_size specifies the amount of bytes to write from the description pointer in memory to the core dump note. The description will be padded to be 4 byte aligned.\r\n\r\nYou can dump as many information you want, provided the total corefile size doesn't exceed the ulimit setting of the system.\r\n\r\nThis project is a baby exercise to leverage GoogleCoreDumper and save the pmap output of the process in core, before it exits.\r\nThis followed by tweaking the readelf command to read this special note in stdout.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}